<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="learning.example.mapper.PostMapper">
  <resultMap id="BaseResultMap" type="learning.example.enity.Post">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="BLOG_ID" jdbcType="INTEGER" property="blogId" />
    <result column="AUTHOR_ID" jdbcType="INTEGER" property="authorId" />
    <result column="SECTION" jdbcType="VARCHAR" property="section" />
    <result column="SUBJECT" jdbcType="VARCHAR" property="subject" />
    <result column="DRAFT" jdbcType="VARCHAR" property="draft" />
    <result column="BODY" jdbcType="VARCHAR" property="body" />
    <result column="CREATED_ON" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="EDIT_DATE" jdbcType="TIMESTAMP" property="editDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, BLOG_ID, AUTHOR_ID, SECTION, SUBJECT, DRAFT, BODY, CREATED_ON, EDIT_DATE
  </sql>
  <select id="selectByExample" parameterType="learning.example.enity.PostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from post
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="learning.example.enity.PostExample">
    delete from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="learning.example.enity.Post">
    insert into post (ID, BLOG_ID, AUTHOR_ID, 
      SECTION, SUBJECT, DRAFT, 
      BODY, CREATED_ON, EDIT_DATE
      )
    values (#{id,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER}, 
      #{section,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{draft,jdbcType=VARCHAR}, 
      #{body,jdbcType=VARCHAR}, #{createdOn,jdbcType=TIMESTAMP}, #{editDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="learning.example.enity.Post">
    insert into post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="blogId != null">
        BLOG_ID,
      </if>
      <if test="authorId != null">
        AUTHOR_ID,
      </if>
      <if test="section != null">
        SECTION,
      </if>
      <if test="subject != null">
        SUBJECT,
      </if>
      <if test="draft != null">
        DRAFT,
      </if>
      <if test="body != null">
        BODY,
      </if>
      <if test="createdOn != null">
        CREATED_ON,
      </if>
      <if test="editDate != null">
        EDIT_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="section != null">
        #{section,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="draft != null">
        #{draft,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="editDate != null">
        #{editDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="learning.example.enity.PostExample" resultType="java.lang.Long">
    select count(*) from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update post
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.blogId != null">
        BLOG_ID = #{record.blogId,jdbcType=INTEGER},
      </if>
      <if test="record.authorId != null">
        AUTHOR_ID = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.section != null">
        SECTION = #{record.section,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        SUBJECT = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.draft != null">
        DRAFT = #{record.draft,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null">
        BODY = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.createdOn != null">
        CREATED_ON = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editDate != null">
        EDIT_DATE = #{record.editDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update post
    set ID = #{record.id,jdbcType=INTEGER},
      BLOG_ID = #{record.blogId,jdbcType=INTEGER},
      AUTHOR_ID = #{record.authorId,jdbcType=INTEGER},
      SECTION = #{record.section,jdbcType=VARCHAR},
      SUBJECT = #{record.subject,jdbcType=VARCHAR},
      DRAFT = #{record.draft,jdbcType=VARCHAR},
      BODY = #{record.body,jdbcType=VARCHAR},
      CREATED_ON = #{record.createdOn,jdbcType=TIMESTAMP},
      EDIT_DATE = #{record.editDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="learning.example.enity.Post">
    update post
    <set>
      <if test="blogId != null">
        BLOG_ID = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        AUTHOR_ID = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="section != null">
        SECTION = #{section,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        SUBJECT = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="draft != null">
        DRAFT = #{draft,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        BODY = #{body,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        CREATED_ON = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="editDate != null">
        EDIT_DATE = #{editDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="learning.example.enity.Post">
    update post
    set BLOG_ID = #{blogId,jdbcType=INTEGER},
      AUTHOR_ID = #{authorId,jdbcType=INTEGER},
      SECTION = #{section,jdbcType=VARCHAR},
      SUBJECT = #{subject,jdbcType=VARCHAR},
      DRAFT = #{draft,jdbcType=VARCHAR},
      BODY = #{body,jdbcType=VARCHAR},
      CREATED_ON = #{createdOn,jdbcType=TIMESTAMP},
      EDIT_DATE = #{editDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>